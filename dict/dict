功能说明
    用户可以登录和注册
        登录凭借用户名和密码登录
        注册要求用户必须填写用户名，密码，其他内容自定
        用户名要求不能重复
        要求用户信息能够长期保存
    可以通过基本的图形界面print以提示客户端输入
        程序分为服务端和客户端两部分
        客户端通过print打印简单界面输入命令发起请求
        服务端主要负责逻辑数据处理
        启动服务端后应该能满足多个客户端同时操作
    客户端启动后即进入一级界面，包含如下功能：登录 注册 退出
        退出后即退出该软件
        登录成功即进入二级界面，失败回到一级界面
        注册成功可以回到一级界面继续登录，也可以直接用注册用户进入二级界面
    用户登录后进入二级界面，功能如下：查单词 历史记录 注销
        选择注销则回到一级界面
        查单词：循环输入单词，得到单词解释，输入特殊符号退出单词查询状态
        历史记录：查询当前用户的查询记录，要求记录包含name word time.可以查看所有记录或者前10条均可


1.确定好技术方案（套接字，并发，细节确定）
    tcp套接字
    Process多进程
    历史记录：前10条
    注册成功 直接登录
2.数据表进行建立（dict:words）
    用户 user -> id name passwd
        CREATE TABLE USER ( id INT PRIMARY KEY auto_increment, NAME VARCHAR ( 32 ) NOT NULL, passwd VARCHAR ( 128 ) NOT NULL );
    历史记录 hist -> id name word time
        CREATE TABLE hist (id INT PRIMARY KEY auto_increment,NAME VARCHAR ( 32 ) NOT NULL,word VARCHAR ( 28 ) NOT NULL,time datetime DEFAULT NOW());
3.结构设计:几个模块 封装设计
    客户端
    服务端：逻辑请求处理，数据库操作处理
    函数：直接写一个功能程序提供给使用者，使用者直接运行，而不是需要使用我的代码的某一部分
4.功能分析 和 通信搭建
    并发通信
    登录
    注册
    查单词
    历史记录
5.罗列功能逻辑（每个功能确定服务端和客户端该做什么，编写代码测试）
    注册 客户端：输入注册信息、发送请求、得到反馈
        服务端：接收请求、判断是否允许注册、允许注册将用户信息存入数据库、给客户端反馈结果
6.设定客户端服务端协议
    注册  R
    登录  L
    查单词 Q
    历史记录 H
    退出  E